name: Users CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  eslint:
    name:  Analyzes source code 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install
        run: npm ci
      - name: Run eslint on changed files
        uses: tj-actions/eslint-changed-files@v8
        with:
          config_path: ".eslintrc"
          extensions: "js"
          extra_args: "--max-warnings=0"
  tests:
    needs: [ eslint ]
    name:  Run unitary and integration tests 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install
        run: npm ci
      - name: Run tests
        run: npm test
  publish-image:
    needs: [ tests ]
    name: Publish Docker image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: tfm-users
      IMAGE_TRUNK_TAG: trunk
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TRUNK_TAG }}
  deploy:
    needs: [ publish-image ]
    name: Deploy in k8s
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: 'main'
    - name: 'Deploy'
      uses: 'deliverybot/helm@v1'
      with:
        release: 'users-develop'
        namespace: 'tfm-dev-amartinm82'
        chart: './helm/charts'
        values: |
          mysql:
            create: true
          image:
            tag: trunk
        helm: helm3
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
